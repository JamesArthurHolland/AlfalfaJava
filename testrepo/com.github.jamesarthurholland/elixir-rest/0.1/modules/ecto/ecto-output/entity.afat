{{ALFALFA -o {{en_tity}}_entity.ex}}
defmodule {{Project}}.{{Entity}}.{{Entity}}Entity do
  use Ecto.Schema
  import Ecto.Changeset

  {{VARS}}
  {{KEY}}@primary_key {:id, :string, []}{{/KEY}}
  {{KEY}}@derive {Phoenix.Param, key: :id}{{/KEY}}
  {{/VARS}}
  schema "{{table}}" do
    {{VARS}}
    {{NOT-KEY NOT-LAST}}field(:{{v_ar}}, :{{type}}){{/NOT-KEY}}
	{{/VARS}}
	{{VARS}}
    {{NOT-KEY LAST}}field(:{{v_ar}}, :{{type}}){{/NOT-KEY}}
	{{/VARS}}

    timestamps(inserted_at: :created_at)

  end

  @doc false
  def changeset({{en_tity}}, attrs) do
    {{en_tity}}
    |> cast(attrs, [
      {{VARS}}
      {{KEY}}:{{v_ar}},{{/KEY}}
      {{NOT-KEY NOT-LAST}}:{{v_ar}},{{/NOT-KEY}}
      {{/VARS}}
      {{VARS}}
      {{NOT-KEY LAST}}:{{v_ar}}{{/NOT-KEY}}
      {{/VARS}}
    ])
  end
end
