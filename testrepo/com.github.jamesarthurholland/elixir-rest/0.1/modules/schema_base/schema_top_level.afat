{{ALFALFA -o schema.ex}}
defmodule ElixirRestWeb.Schema do
  use Absinthe.Schema

  alias ElixirRestWeb.Resolvers
  # import Types
  import_types(ElixirRestWeb.Schema.Types)

  query do
    {{ENTITIES}}
    @desc "Get a list of all {{en_tity}} entities"
    field :{{en_tity}}, list_of(:{{en_tity}}_type) do
      # Resolver
      resolve(&Resolvers.{{Entity}}Resolver.{{en_tity}}/3)
    end

    {{/ENTITIES}}
  end

  mutation do
    {{ENTITIES}}
    @desc "Create a new {{en_tity}}"
    field :create_{{en_tity}}, type: :{{en_tity}}_type do
      arg(:input, non_null(:{{en_tity}}_input_type))
      resolve(&Resolvers.{{Entity}}Resolver.create_{{en_tity}}/3)
    end

    {{/ENTITIES}}
  end


  #subscription do
  #end

end